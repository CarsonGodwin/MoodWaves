import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

/// Generates the page for the Events tab of the app.
///
class EventsPage extends StatelessWidget {
  const EventsPage({super.key});

  /// Returns a checkable time string, allowing cards with closer time
  /// to rise to the top
  DateTime _dateCreator(String eventDate) {
    final now = DateTime.now();
    eventDate = eventDate.replaceAll("at ", "");
    List<String> splittedList = eventDate.split(" ");

    String timeMonth = splittedList[0].toLowerCase();
    int timeDay = int.parse(splittedList[1]);

    String timeVal = splittedList[2];
    List<String> splittedTime = timeVal.split(":");
    int timeHr = int.parse(splittedTime[0]);
    int timeMin = int.parse(splittedTime[1].substring(0, 2));
    String meridium = splittedTime[1].substring(2);

    if (meridium == "PM") {
      timeHr = timeHr + 12;
    }

    // "April" "27" "2:30"

    DateTime eventDateTime =
        DateTime(now.year, _getMonthIndex(timeMonth), timeDay, timeHr, timeMin);
    if (kDebugMode) {
      print(eventDateTime);
    }
    return eventDateTime;
  }

  /// Takes in an unsorted list of events, and based on their DateTime values,
  List listSorter(List feedItems) {
    final now = DateTime.now();
    List sortedList = [];
    List expiredList = [];

    for (var i = 0; i < feedItems.length; i++) {
      DateTime indivEventTime = _dateCreator(feedItems[i]['datetime']);

      if (indivEventTime.isBefore(now)) {
        String expiredTime = (feedItems[i]["datetime"]);
        feedItems[i]["datetime"] = ("Expired: $expiredTime");
        expiredList.add(feedItems[i]);
      } else if (indivEventTime.isAfter(now)) {
        sortedList.add(feedItems[i]);
      }
    }
    if (kDebugMode) {
      print(expiredList.length);
    }
    sortedList.addAll(expiredList);

    // print(sortedList.reversed);

    return sortedList;
  }

  /// returns number for month index, generated by ChatGPT
  int _getMonthIndex(String monthName) {
    switch (monthName.toLowerCase()) {
      case 'january':
        return 1;
      case 'february':
        return 2;
      case 'march':
        return 3;
      case 'april':
        return 4;
      case 'may':
        return 5;
      case 'june':
        return 6;
      case 'july':
        return 7;
      case 'august':
        return 8;
      case 'september':
        return 9;
      case 'october':
        return 10;
      case 'november':
        return 11;
      case 'december':
        return 12;
      default:
        throw ArgumentError('Invalid month name: $monthName');
    }
  }

  /// Override method stores dummy data, and
  @override
  Widget build(BuildContext context) {
    // Dummy data for feed items
    final List<Map<String, String>> feedItems = [
      {
        'title': "What to do with Expired Goods",
        'content': "One great calming activity is to restock old cans!",
        'author': "UNCW Sustainability",
        'datetime': "February 21 at 2:00PM",
        'location': "Fisher Student Center",
      },
      {
        'title': "Fire at Seahawk village",
        'content': "Celebrate at the pool, and eat s'mores at the campfire!",
        'author': "Campus Housing",
        'datetime': "April 24 at 5:30PM",
        'location': "Seahawk Village",
      },
      {
        'title': "Spa Day",
        'content': "Take some time to treat yourself!",
        'author': "Seahawk Wellness",
        'datetime': "April 26 at 2:30PM",
        'location': "Leonard Student Recreational Center",
      },
      {
        'title': "Yoga on the Beach",
        'content':
            "Come join us this morning on the seaside for a calming experience!",
        'author': "UNCW Yoga Association",
        'datetime': "April 27 at 8:00AM",
        'location': "Wrightsville Beach",
      },
      {
        'title': "Handpan Music Festival",
        'content':
            "Listen to the soothing ringing of these bell-like instruments!",
        'author': "Blue Mountain Group",
        'datetime': "April 28 at 12:30PM",
        'location': "Fisher Student Center",
      }
    ];

    List sortedList = listSorter(feedItems);

    return Scaffold(
      body: ListView.builder(
        itemCount: sortedList.length,
        itemBuilder: (context, index) {
          return Card(
            child: Padding(
              padding: const EdgeInsets.all(8.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: <Widget>[
                  Text(
                    sortedList[index]['title']!,
                    style: const TextStyle(
                      fontSize: 18.0,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  const SizedBox(height: 8.0),
                  Text(sortedList[index]['content']!),
                  const SizedBox(height: 8.0),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: <Widget>[
                      Flexible(
                          flex: 2, child: Text(sortedList[index]['author']!)),
                      Flexible(
                          flex: 2, child: Text(sortedList[index]['location']!)),
                      Flexible(
                          flex: 3, child: Text(sortedList[index]['datetime']!)),
                    ],
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}
